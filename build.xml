<project name="web-lab3" basedir="."
         xmlns:ivy="antlib:org.apache.ivy.ant">

    <property file="build.properties"/>
    <!-- Определение свойств -->


    <path id="ivy.lib.path">
        <pathelement location="${ivy.lib.dir}/ivy-2.5.2.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>



    <!-- Основной classpath для компиляции -->
    <path id="compile.classpath">
        <fileset dir="${lib.dir}/compile" includes="**/*.jar"/>
        <fileset dir="${lib.dir}/provided" includes="**/*.jar"/>
    </path>

    <!-- Classpath для тестов (добавляет основные классы) -->
    <path id="test.classpath">
        <path refid="compile.classpath"/>
        <pathelement location="${main.classes.dir}"/>
        <pathelement location="${test.classes.dir}"/>
        <fileset dir="${lib.dir}/test" includes="**/*.jar"/>
    </path>

    <!-- Загрузка зависимостей через Ivy -->
    <target name="resolve" depends="init" description="Загружает зависимости">
        <ivy:settings file="${basedir}/ivysettings.xml"/>
        <ivy:resolve/>
        <ivy:retrieve pattern="${lib.dir}/[conf]/[artifact]-[revision]-[type].[ext]"
                      conf="compile,provided,test"/>
    </target>

    <!-- Инициализация -->
    <target name="init" description="Создаёт необходимые директории">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${main.classes.dir}"/>
        <mkdir dir="${lib.dir}"/>
    </target>

    <target name="init_test" depends="init" description="Создаёт тестовые директории">
        <mkdir dir="${test.classes.dir}"/>
        <mkdir dir="${test.reports.dir}"/>
    </target>


    <!-- Компиляция тестов -->
    <target name="compile_tests" depends="compile,init_test">
        <javac srcdir="${test.dir}" destdir="${test.classes.dir}"
               source="17" target="17" includeantruntime="false">
            <classpath refid="test.classpath"/>
        </javac>
    </target>

    <!-- Запуск тестов (JUnit 5) -->
    <target name="run_tests" depends="compile_tests">
        <mkdir dir="${test.reports.dir}"/>

        <junitlauncher haltOnFailure="false" printSummary="true">
            <classpath refid="test.classpath"/>

            <testclasses outputdir="${test.reports.dir}">
                <fileset dir="${test.classes.dir}">
                    <include name="**/*Test*.class"/>
                    <exclude name="**/*$*.class"/>
                </fileset>
            </testclasses>

            <listener type="legacy-xml" sendSysOut="true" sendSysErr="true"/>
        </junitlauncher>
        <junitreport todir="${test.reports.dir}">
            <fileset dir="${test.reports.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${test.reports.dir}/html"/>
        </junitreport>
    </target>

    <target name="clean_test">
        <delete dir="${test.reports.dir}"/>
    </target>

    <target name="test" depends="run_tests" description="Запуск всех тестов"/>


    <!-- Компиляция -->
    <target name="compile" depends="resolve" description="Компилирует исходный код">
        <javac srcdir="${src.dir}" destdir="${main.classes.dir}"
               source="17" target="17" includeantruntime="false">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>


    <!-- BUILD -->
    <target name="sad_build" depends="clean, compile">
        <echo message="----- BUILD STARTED -----"/>
        <copy todir="${build.dir}">
            <fileset dir="${webapp.dir}"/>
        </copy>
        <copy todir="${build.dir.lib}">
            <fileset dir="${lib.dir}"/>
        </copy>
        <copy todir="${main.classes.dir}">
            <fileset dir="${resources.dir}"/>
        </copy>
        <manifest file="${build.manifest.dir}">
            <attribute name="Created-By" value="Kanye West"/>
            <attribute name="Manifest-Version" value="1.0"/>
            <attribute name="Main-Class" value="NoClass"/>
        </manifest>
        <jar destfile="${build.dir}/${ant.project.name}.jar" manifest="${build.manifest.dir}">
            <fileset dir="${main.classes.dir}"/>
        </jar>
        <war destfile="${war.file}" webxml="${webapp.dir}/WEB-INF/web.xml">
            <fileset dir="${webapp.dir}"/>
            <lib dir="${lib.dir}/compile"/>
            <classes dir="${main.classes.dir}"/>
        </war>

        <echo message="----- BUILD COMPLETED -----"/>
    </target>

    <!-- Музыка -->
    <target name="music">
        <echo message="----- BUILD COMPLETED! Starting music... -----"/>
        <exec executable="mpg123" osfamily="unix">
<!--            <arg value="${music.dir}/surprise.mp3"/>-->
        </exec>
    </target>

    <target name="build" depends="sad_build, music"/>

    <!-- Очистка -->
    <target name="clean" description="Удаляет все сгенерированные файлы и зависимости">
        <delete includeemptydirs="true" failonerror="false">
            <fileset dir="${build.dir}" includes="**/*"/>
            <fileset dir="${lib.dir}" includes="**/*"/>
        </delete>
        <delete dir="${build.dir}"/>
    </target>

    <!-- Xml -->
    <target name="xml">
        <echo message="----- Validating all XML files... -----"/>
        <xmlvalidate failonerror="true" lenient="true">
            <fileset dir="${basedir}" includes="**/*.xml" excludes=".idea/**,lib/**,build/**"/>
        </xmlvalidate>
        <echo message="----- XML validation completed! -----"/>
    </target>

    <target name="lang">
        <condition property="lang" value="${lang}" else="${locale.default}">
            <isset property="lang"/>
        </condition>

        <echo message="Locale: ${lang}"/>
        <available file="${message.resources}/messages_${lang}.properties" property="file.exists"/>
        <fail message="File ${message.resources}/messages_${lang}.properties does not exist!"
              unless="file.exists"/>

        <echo message="Selected locale: ${lang}"/>
    </target>

    <target name="native2ascii" depends="lang">
        <echo message="----- NATIVE2ASCII STARTED -----"/>
        <delete dir="${native2ascii.resources}"/>
        <native2ascii src="${message.resources}"
                      dest="${native2ascii.resources}"
                      includes="messages_${lang}.properties"
                      encoding="UTF-8"/>
        <echo message="----- NATIVE2ASCII COMPLETED -----"/>
    </target>

    <target name="n2a" depends="native2ascii"/>

    <target name="env" depends="n2a">
        <echo message="----- ENV STARTED -----"/>
        <antcall target="build"/>
        <copy file="${build.dir}/web-lab3.war" todir="${scp.dir}"/>
        <exec executable="sh">
            <arg value="${env.script}"/>
        </exec>
        <echo message="----- ENV COMPLETED -----"/>
    </target>


</project>